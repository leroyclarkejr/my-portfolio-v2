import React, { useEffect, Fragment } from "react"

// import { useStaticQuery } from "gatsby"
// import { gsap } from "react-gsap"
import { Tween, Timeline, Reveal } from "react-gsap"
import { gsap } from "gsap/all"

// import Img from "gatsby-image"

import Layout from "../components/layout"
import me from "../data/images/me.jpeg"
import me2 from "../data/images/me-black-white.jpeg"
import me3 from "../data/images/official.jpg"
import "../styles/styles.scss"

const About = data => {
  const skills = [
    {
      name: "HTML5",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
          <path
            fill="#E44D26"
            d="M9.032 2l10.005 112.093 44.896 12.401 45.02-12.387 10.015-112.107h-109.936zm89.126 26.539l-.627 7.172-.276 3.289h-52.665000000000006l1.257 14h50.156000000000006l-.336 3.471-3.233 36.119-.238 2.27-28.196 7.749v.002l-.034.018-28.177-7.423-1.913-21.206h13.815000000000001l.979 10.919 15.287 4.081h.043v-.546l15.355-3.875 1.604-17.579h-47.698l-3.383-38.117-.329-3.883h68.939l-.33 3.539z"
          />
        </svg>
      ),
      key: 0,
    },
    {
      name: "CSS3",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
          <path
            fill="#1572B6"
            d="M8.76 1l10.055 112.883 45.118 12.58 45.244-12.626 10.063-112.837h-110.48zm89.591 25.862l-3.347 37.605.01.203-.014.467v-.004l-2.378 26.294-.262 2.336-28.36 7.844v.001l-.022.019-28.311-7.888-1.917-21.739h13.883l.985 11.054 15.386 4.17-.004.008v-.002l15.443-4.229 1.632-18.001h-32.282999999999994l-.277-3.043-.631-7.129-.331-3.828h34.748999999999995l1.264-14h-52.926l-.277-3.041-.63-7.131-.332-3.828h69.281l-.331 3.862z"
          />
        </svg>
      ),
      key: 1,
    },
    {
      name: "SASS",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
          <path
            // fill-rule="evenodd"
            // clip-rule="evenodd"
            fill="#CB6699"
            d="M1.219 56.156c0 .703.207 1.167.323 1.618.756 2.933 2.381 5.45 4.309 7.746 2.746 3.272 6.109 5.906 9.554 8.383 2.988 2.148 6.037 4.248 9.037 6.38.515.366 1.002.787 1.561 1.236-.481.26-.881.489-1.297.7-3.959 2.008-7.768 4.259-11.279 6.986-2.116 1.644-4.162 3.391-5.607 5.674-2.325 3.672-3.148 7.584-1.415 11.761.506 1.22 1.278 2.274 2.367 3.053.353.252.749.502 1.162.6 1.058.249 2.136.412 3.207.609l3.033-.002c3.354-.299 6.407-1.448 9.166-3.352 4.312-2.976 7.217-6.966 8.466-12.087.908-3.722.945-7.448-.125-11.153-.099-.344-.224-.681-.354-1.014-.13-.333-.283-.657-.463-1.072l6.876-3.954.103.088c-.125.409-.258.817-.371 1.23-.817 2.984-1.36 6.02-1.165 9.117.208 3.3 1.129 6.389 3.061 9.146 1.562 2.23 5.284 2.313 6.944.075.589-.795 1.16-1.626 1.589-2.513 1.121-2.315 2.159-4.671 3.23-7.011l.187-.428c-.077 1.108-.167 2.081-.208 3.055-.064 1.521.025 3.033.545 4.48.445 1.238 1.202 2.163 2.62 2.326.97.111 1.743-.333 2.456-.896 1.114-.879 2.019-1.965 2.691-3.199 1.901-3.491 3.853-6.961 5.576-10.54 1.864-3.871 3.494-7.855 5.225-11.792l.286-.698c.409 1.607.694 3.181 1.219 4.671.61 1.729 1.365 3.417 2.187 5.058.389.775.344 1.278-.195 1.928-2.256 2.72-4.473 5.473-6.692 8.223-.491.607-.98 1.225-1.389 1.888-.247.403-.411.894-.48 1.364-.133.898.422 1.764 1.383 1.971.878.189 1.813.259 2.708.193 3.097-.228 5.909-1.315 8.395-3.157 3.221-2.386 4.255-5.642 3.475-9.501-.211-1.047-.584-2.065-.947-3.074-.163-.455-.174-.774.123-1.198 2.575-3.677 4.775-7.578 6.821-11.569.081-.157.164-.314.306-.482.663 3.45 1.661 6.775 3.449 9.792-.912.879-1.815 1.676-2.632 2.554-1.799 1.934-3.359 4.034-4.173 6.595-.35 1.104-.619 2.226-.463 3.405.242 1.831 1.742 3.021 3.543 2.604 3.854-.892 7.181-2.708 9.612-5.925 1.636-2.166 1.785-4.582 1.1-7.113-.188-.688-.411-1.365-.651-2.154.951-.295 1.878-.649 2.837-.868 4.979-1.136 9.904-.938 14.702.86 2.801 1.05 5.064 2.807 6.406 5.571 1.639 3.379.733 6.585-2.452 8.721-.297.199-.637.356-.883.605-.151.153-.242.459-.205.67.021.123.346.277.533.275 1.047-.008 1.896-.557 2.711-1.121 2.042-1.413 3.532-3.314 3.853-5.817l.063-.188-.077-1.63c-.031-.094.023-.187.016-.258-.434-3.645-2.381-6.472-5.213-8.688-3.28-2.565-7.153-3.621-11.249-3.788-3.338-.136-6.619.36-9.765 1.503-.897.325-1.786.71-2.688 1.073-.121-.219-.251-.429-.358-.646-.926-1.896-2.048-3.708-2.296-5.882-.176-1.544-.392-3.086-.025-4.613.353-1.469.813-2.913 1.246-4.362.223-.746.066-1.164-.646-1.5-.248-.117-.518-.219-.786-.258-1.75-.254-3.476-.109-5.171.384-.6.175-1.036.511-1.169 1.175-.076.381-.231.746-.339 1.122-.443 1.563-.757 3.156-1.473 4.645-1.794 3.735-3.842 7.329-5.938 10.897-.227.385-.466.763-.752 1.23-.736-1.54-1.521-2.922-1.759-4.542-.269-1.832-.481-3.661-.025-5.479.339-1.356.782-2.687 1.19-4.025.193-.636.104-.97-.472-1.305-.291-.169-.62-.319-.948-.368-1.815-.269-3.603-.128-5.354.438-.543.176-.828.527-.994 1.087-.488 1.652-.904 3.344-1.589 4.915-2.774 6.36-5.628 12.687-8.479 19.013-.595 1.321-1.292 2.596-1.963 3.882-.17.326-.418.613-.63.919-.17-.201-.236-.339-.235-.477.005-.813-.092-1.65.063-2.436.469-2.378 1.009-4.743 1.578-7.099.47-1.946 1.017-3.874 1.538-5.807.175-.647.178-1.252-.287-1.796-.781-.911-2.413-1.111-3.381-.409l-.428.242.083-.69c.204-1.479.245-2.953-.161-4.41-.506-1.816-1.802-2.861-3.686-2.803-.878.027-1.8.177-2.613.497-3.419 1.34-6.048 3.713-8.286 6.568-.203.259-.471.495-.757.654-2.893 1.604-5.795 3.188-8.696 4.778l-3.229 1.769c-.866-.826-1.653-1.683-2.546-2.41-2.727-2.224-5.498-4.393-8.244-6.592-2.434-1.949-4.792-3.979-6.596-6.56-1.342-1.92-2.207-4.021-2.29-6.395-.105-3.025.753-5.789 2.293-8.362 1.97-3.292 4.657-5.934 7.611-8.327 3.125-2.53 6.505-4.678 10.008-6.639 4.901-2.743 9.942-5.171 15.347-6.774 5.542-1.644 11.165-2.585 16.965-1.929 2.28.258 4.494.78 6.527 1.895 1.557.853 2.834 1.97 3.428 3.716.586 1.718.568 3.459.162 5.204-.825 3.534-2.76 6.447-5.195 9.05-3.994 4.267-8.866 7.172-14.351 9.091-3.165 1.107-6.421 1.802-9.765 2.083-2.729.229-5.401-.013-7.985-.962-1.711-.629-3.201-1.591-4.399-2.987-.214-.25-.488-.521-.887-.287-.391.23-.46.602-.329.979.219.626.421 1.278.762 1.838.857 1.405 2.107 2.424 3.483 3.298 2.643 1.681 5.597 2.246 8.66 2.377 4.648.201 9.183-.493 13.654-1.74 6.383-1.78 11.933-4.924 16.384-9.884 3.706-4.13 6.353-8.791 6.92-14.419.277-2.747-.018-5.438-1.304-7.944-1.395-2.715-3.613-4.734-6.265-6.125-3.862-2.025-8.03-3.204-12.332-3.204h-4.31c-5.21 0-10.247 1.493-15.143 3.274-3.706 1.349-7.34 2.941-10.868 4.703-7.683 3.839-14.838 8.468-20.715 14.833-2.928 3.171-5.407 6.67-6.833 10.79-.417 1.206-.813 2.499-1.111 3.746m27.839 36.013c-.333 4.459-2.354 8.074-5.657 11.002-1.858 1.646-3.989 2.818-6.471 3.23-.9.149-1.821.185-2.694-.188-1.245-.532-1.524-1.637-1.548-2.814-.037-1.876.62-3.572 1.521-5.186 1.176-2.104 2.9-3.708 4.741-5.206 2.9-2.361 6.046-4.359 9.268-6.245l.243-.1c.498 1.84.735 3.657.597 5.507zm25.158-19.379c-.235 1.424-.529 2.849-.945 4.229-1.438 4.777-3.285 9.406-5.282 13.973-.369.845-.906 1.616-1.373 2.417-.072.124-.179.231-.283.334-.578.571-1.126.541-1.418-.206-.34-.868-.549-1.797-.729-2.716-.121-.617-.092-1.265-.13-1.897.039-4.494 1.41-8.578 3.736-12.38.959-1.568 2.003-3.062 3.598-4.054.49-.305 1.04-.55 1.595-.706.85-.239 1.372.154 1.231 1.006zm17.164 21.868l6.169-7.203c.257 2.675-4.29 8.015-6.169 7.203zm19.703-4.847c-.436.25-.911.43-1.358.661-.409.212-.544-.002-.556-.354-.008-.239.027-.489.093-.721.833-2.938 2.366-5.446 4.647-7.486l.16-.082c1.085 3.035-.169 6.368-2.986 7.982z"
          />
        </svg>
      ),
      key: 2,
    },
    {
      name: "Javascript ES6",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
          <path
            fill="#F0DB4F"
            d="M2 1v125h125v-125h-125zm66.119 106.513c-1.845 3.749-5.367 6.212-9.448 7.401-6.271 1.44-12.269.619-16.731-2.059-2.986-1.832-5.318-4.652-6.901-7.901l9.52-5.83c.083.035.333.487.667 1.071 1.214 2.034 2.261 3.474 4.319 4.485 2.022.69 6.461 1.131 8.175-2.427 1.047-1.81.714-7.628.714-14.065-.001-10.115.046-20.188.046-30.188h11.709c0 11 .06 21.418 0 32.152.025 6.58.596 12.446-2.07 17.361zm48.574-3.308c-4.07 13.922-26.762 14.374-35.83 5.176-1.916-2.165-3.117-3.296-4.26-5.795 4.819-2.772 4.819-2.772 9.508-5.485 2.547 3.915 4.902 6.068 9.139 6.949 5.748.702 11.531-1.273 10.234-7.378-1.333-4.986-11.77-6.199-18.873-11.531-7.211-4.843-8.901-16.611-2.975-23.335 1.975-2.487 5.343-4.343 8.877-5.235l3.688-.477c7.081-.143 11.507 1.727 14.756 5.355.904.916 1.642 1.904 3.022 4.045-3.772 2.404-3.76 2.381-9.163 5.879-1.154-2.486-3.069-4.046-5.093-4.724-3.142-.952-7.104.083-7.926 3.403-.285 1.023-.226 1.975.227 3.665 1.273 2.903 5.545 4.165 9.377 5.926 11.031 4.474 14.756 9.271 15.672 14.981.882 4.916-.213 8.105-.38 8.581z"
          />
        </svg>
      ),
      key: 3,
    },
    {
      name: "React.js",
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 128 128"
          enableBackground="new 0 0 128 128"
        >
          <g fill="#61DAFB">
            <circle cx="64" cy="64" r="11.4" />
            <path d="M107.3 45.2c-2.2-.8-4.5-1.6-6.9-2.3.6-2.4 1.1-4.8 1.5-7.1 2.1-13.2-.2-22.5-6.6-26.1-1.9-1.1-4-1.6-6.4-1.6-7 0-15.9 5.2-24.9 13.9-9-8.7-17.9-13.9-24.9-13.9-2.4 0-4.5.5-6.4 1.6-6.4 3.7-8.7 13-6.6 26.1.4 2.3.9 4.7 1.5 7.1-2.4.7-4.7 1.4-6.9 2.3-12.5 4.8-19.3 11.4-19.3 18.8s6.9 14 19.3 18.8c2.2.8 4.5 1.6 6.9 2.3-.6 2.4-1.1 4.8-1.5 7.1-2.1 13.2.2 22.5 6.6 26.1 1.9 1.1 4 1.6 6.4 1.6 7.1 0 16-5.2 24.9-13.9 9 8.7 17.9 13.9 24.9 13.9 2.4 0 4.5-.5 6.4-1.6 6.4-3.7 8.7-13 6.6-26.1-.4-2.3-.9-4.7-1.5-7.1 2.4-.7 4.7-1.4 6.9-2.3 12.5-4.8 19.3-11.4 19.3-18.8s-6.8-14-19.3-18.8zm-14.8-30.5c4.1 2.4 5.5 9.8 3.8 20.3-.3 2.1-.8 4.3-1.4 6.6-5.2-1.2-10.7-2-16.5-2.5-3.4-4.8-6.9-9.1-10.4-13 7.4-7.3 14.9-12.3 21-12.3 1.3 0 2.5.3 3.5.9zm-11.2 59.3c-1.8 3.2-3.9 6.4-6.1 9.6-3.7.3-7.4.4-11.2.4-3.9 0-7.6-.1-11.2-.4-2.2-3.2-4.2-6.4-6-9.6-1.9-3.3-3.7-6.7-5.3-10 1.6-3.3 3.4-6.7 5.3-10 1.8-3.2 3.9-6.4 6.1-9.6 3.7-.3 7.4-.4 11.2-.4 3.9 0 7.6.1 11.2.4 2.2 3.2 4.2 6.4 6 9.6 1.9 3.3 3.7 6.7 5.3 10-1.7 3.3-3.4 6.6-5.3 10zm8.3-3.3c1.5 3.5 2.7 6.9 3.8 10.3-3.4.8-7 1.4-10.8 1.9 1.2-1.9 2.5-3.9 3.6-6 1.2-2.1 2.3-4.2 3.4-6.2zm-25.6 27.1c-2.4-2.6-4.7-5.4-6.9-8.3 2.3.1 4.6.2 6.9.2 2.3 0 4.6-.1 6.9-.2-2.2 2.9-4.5 5.7-6.9 8.3zm-18.6-15c-3.8-.5-7.4-1.1-10.8-1.9 1.1-3.3 2.3-6.8 3.8-10.3 1.1 2 2.2 4.1 3.4 6.1 1.2 2.2 2.4 4.1 3.6 6.1zm-7-25.5c-1.5-3.5-2.7-6.9-3.8-10.3 3.4-.8 7-1.4 10.8-1.9-1.2 1.9-2.5 3.9-3.6 6-1.2 2.1-2.3 4.2-3.4 6.2zm25.6-27.1c2.4 2.6 4.7 5.4 6.9 8.3-2.3-.1-4.6-.2-6.9-.2-2.3 0-4.6.1-6.9.2 2.2-2.9 4.5-5.7 6.9-8.3zm22.2 21l-3.6-6c3.8.5 7.4 1.1 10.8 1.9-1.1 3.3-2.3 6.8-3.8 10.3-1.1-2.1-2.2-4.2-3.4-6.2zm-54.5-16.2c-1.7-10.5-.3-17.9 3.8-20.3 1-.6 2.2-.9 3.5-.9 6 0 13.5 4.9 21 12.3-3.5 3.8-7 8.2-10.4 13-5.8.5-11.3 1.4-16.5 2.5-.6-2.3-1-4.5-1.4-6.6zm-24.7 29c0-4.7 5.7-9.7 15.7-13.4 2-.8 4.2-1.5 6.4-2.1 1.6 5 3.6 10.3 6 15.6-2.4 5.3-4.5 10.5-6 15.5-13.8-4-22.1-10-22.1-15.6zm28.5 49.3c-4.1-2.4-5.5-9.8-3.8-20.3.3-2.1.8-4.3 1.4-6.6 5.2 1.2 10.7 2 16.5 2.5 3.4 4.8 6.9 9.1 10.4 13-7.4 7.3-14.9 12.3-21 12.3-1.3 0-2.5-.3-3.5-.9zm60.8-20.3c1.7 10.5.3 17.9-3.8 20.3-1 .6-2.2.9-3.5.9-6 0-13.5-4.9-21-12.3 3.5-3.8 7-8.2 10.4-13 5.8-.5 11.3-1.4 16.5-2.5.6 2.3 1 4.5 1.4 6.6zm9-15.6c-2 .8-4.2 1.5-6.4 2.1-1.6-5-3.6-10.3-6-15.6 2.4-5.3 4.5-10.5 6-15.5 13.8 4 22.1 10 22.1 15.6 0 4.7-5.8 9.7-15.7 13.4z" />
          </g>
        </svg>
      ),
      key: 4,
    },
    {
      name: "Gatsby.js",
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
        >
          <path
            d="M12.001.007C5.326.007.007 5.326.007 12S5.326 23.995 12 23.995s11.994-5.319 11.994-11.994S18.676.007 12.001.007zM2.614 12.105l9.283 9.283c-5.111 0-9.283-4.172-9.283-9.283zm11.473 9.074L2.823 9.915C3.76 5.743 7.516 2.614 12 2.614a9.476 9.476 0 0 1 7.614 3.86L18.259 7.62a7.657 7.657 0 0 0-6.362-3.337A7.555 7.555 0 0 0 4.7 9.393l9.804 9.805c2.4-.835 4.276-2.92 4.798-5.424h-4.068v-1.773h6.154c0 4.485-3.129 8.24-7.301 9.178z"
            fill="#5F3694"
          />
          <rect x="0" y="0" width="24" height="24" fill="rgba(0, 0, 0, 0)" />
        </svg>
      ),
      key: 5,
    },
    {
      name: "GraphQL",
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          height="64"
          width="64"
          viewBox="0 0 29.999 30"
          fill="#e10098"
        >
          <path d="M4.08 22.864l-1.1-.636L15.248.98l1.1.636z" />
          <path d="M2.727 20.53h24.538v1.272H2.727z" />
          <path d="M15.486 28.332L3.213 21.246l.636-1.1 12.273 7.086zm10.662-18.47L13.874 2.777l.636-1.1 12.273 7.086z" />
          <path d="M3.852 9.858l-.636-1.1L15.5 1.67l.636 1.1z" />
          <path d="M25.922 22.864l-12.27-21.25 1.1-.636 12.27 21.25zM3.7 7.914h1.272v14.172H3.7zm21.328 0H26.3v14.172h-1.272z" />
          <path d="M15.27 27.793l-.555-.962 10.675-6.163.555.962z" />
          <path d="M27.985 22.5a2.68 2.68 0 0 1-3.654.981 2.68 2.68 0 0 1-.981-3.654 2.68 2.68 0 0 1 3.654-.981c1.287.743 1.724 2.375.98 3.654M6.642 10.174a2.68 2.68 0 0 1-3.654.981A2.68 2.68 0 0 1 2.007 7.5a2.68 2.68 0 0 1 3.654-.981 2.68 2.68 0 0 1 .981 3.654M2.015 22.5a2.68 2.68 0 0 1 .981-3.654 2.68 2.68 0 0 1 3.654.981 2.68 2.68 0 0 1-.981 3.654c-1.287.735-2.92.3-3.654-.98m21.343-12.326a2.68 2.68 0 0 1 .981-3.654 2.68 2.68 0 0 1 3.654.981 2.68 2.68 0 0 1-.981 3.654 2.68 2.68 0 0 1-3.654-.981M15 30a2.674 2.674 0 1 1 2.674-2.673A2.68 2.68 0 0 1 15 30m0-24.652a2.67 2.67 0 0 1-2.674-2.674 2.67 2.67 0 1 1 5.347 0A2.67 2.67 0 0 1 15 5.347" />
        </svg>
      ),
      key: 6,
    },
    {
      name: "Git",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 128 128">
          <path
            fill="#F34F29"
            d="M124.742 58.378l-55.117-55.114c-3.172-3.174-8.32-3.174-11.497 0l-11.443 11.446 14.518 14.518c3.375-1.139 7.243-.375 9.932 2.314 2.703 2.706 3.462 6.607 2.293 9.993l13.992 13.994c3.385-1.167 7.292-.413 9.994 2.295 3.78 3.777 3.78 9.9 0 13.679-3.78 3.78-9.901 3.78-13.683 0-2.842-2.844-3.545-7.019-2.105-10.521l-13.048-13.049-.002 34.341c.922.455 1.791 1.063 2.559 1.828 3.779 3.777 3.779 9.898 0 13.683-3.779 3.777-9.904 3.777-13.679 0-3.778-3.784-4.088-9.905-.311-13.683.934-.933 1.855-1.638 2.855-2.11v-34.659c-1-.472-1.92-1.172-2.856-2.111-2.861-2.86-3.396-7.06-1.928-10.576l-14.233-14.313-37.754 37.79c-3.175 3.177-3.155 8.325.02 11.5l55.126 55.114c3.173 3.174 8.325 3.174 11.503 0l54.86-54.858c3.175-3.176 3.178-8.327.004-11.501z"
          />
        </svg>
      ),
      key: 7,
    },
    {
      name: "Laravel",
      icon: (
        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64">
          <path
            d="M39.755 53.777a.985.985 0 0 1-.847-.479l-7.455-12.435-13.943 3.79a.985.985 0 0 1-1.1-.495L.117 13.534a.985.985 0 0 1 .737-1.442l13.833-1.86a.985.985 0 0 1 .979.468l16.7 27.87 19.406-5.277-6.47-9.14a.985.985 0 0 1 .55-1.53l9.08-2.146a.985.985 0 0 1 .996.341l7.857 9.8a.985.985 0 0 1-.512 1.568l-8.253 2.25 7.224 10.18a.985.985 0 0 1-.479 1.502l-21.695 7.588a.985.985 0 0 1-.314.061zm-6.328-13.453l6.757 11.268 19.692-6.894-6.878-9.695zM2.52 13.842l15.247 28.7 12.655-3.433-16.116-26.834zm45.25 10.366l6.052 8.534 7.527-2.047-6.548-8.154z"
            fill="#ef533f"
          />
        </svg>
      ),
      key: 8,
    },
    {
      name: "Webpack",
      icon: (
        <svg
          width="256px"
          height="290px"
          viewBox="0 0 256 290"
          version="1.1"
          preserveAspectRatio="xMidYMid"
        >
          <g>
            <polygon
              fill="#FFFFFF"
              points="128 0.0483018868 256 72.4528302 256 217.310189 128 289.714717 0 217.310189 0 72.4528302"
            ></polygon>
            <path
              d="M233.153208,212.286792 L132.250566,269.427925 L132.250566,224.990189 L195.139623,190.357736 L233.153208,212.286792 Z M240.060377,206.055849 L240.060377,86.6535849 L203.157736,107.954717 L203.157736,184.754717 L240.060377,206.055849 Z M22.4603774,212.286792 L123.363019,269.379623 L123.363019,224.941887 L60.4739623,190.357736 L22.4603774,212.286792 L22.4603774,212.286792 Z M15.5532075,206.055849 L15.5532075,86.6535849 L52.4558491,107.954717 L52.4558491,184.754717 L15.5532075,206.055849 L15.5532075,206.055849 Z M19.8520755,78.925283 L123.363019,20.3833962 L123.363019,63.3720755 L57.0445283,99.84 L56.5132075,100.129811 L19.8520755,78.925283 L19.8520755,78.925283 Z M235.713208,78.925283 L132.250566,20.3833962 L132.250566,63.3720755 L198.520755,99.8883019 L199.052075,100.178113 L235.713208,78.925283 L235.713208,78.925283 Z"
              fill="#8ED6FB"
            ></path>
            <path
              d="M123.363019,214.846792 L61.3433962,180.697358 L61.3433962,113.123019 L123.363019,148.914717 L123.363019,214.846792 L123.363019,214.846792 Z M132.250566,214.846792 L194.270189,180.74566 L194.270189,113.123019 L132.250566,148.914717 L132.250566,214.846792 Z M65.4973585,105.298113 L127.806792,71.0520755 L190.067925,105.298113 L127.806792,141.234717 L65.4973585,105.298113 L65.4973585,105.298113 Z"
              fill="#1C78C0"
            ></path>
          </g>
        </svg>
      ),
      key: 9,
    },
    {
      name: "Gulp",
      icon: (
        <svg
          width="256px"
          height="566px"
          viewBox="0 0 256 566"
          version="1.1"
          preserveAspectRatio="xMidYMid"
        >
          <g>
            <path
              d="M197.28,548.749 L202.707,458.319 L217.692,432.739 C217.692,432.739 183.586,446.691 126.487,446.691 C69.387,446.691 35.798,432.997 35.798,432.997 L52.592,460.901 L58.533,548.749 C58.533,558.167 89.592,565.801 127.907,565.801 C166.22,565.801 197.28,558.167 197.28,548.749"
              fill="#D34A47"
            ></path>
            <path
              d="M180.161,126.454 L191.552,81.429 L254.633,15.053 L238.007,0.892 L171.223,71.599 L157.997,125.392 C148.414,125.068 138.413,124.895 128.124,124.895 C57.788,124.895 0.769,132.911 0.769,142.797 C0.769,152.684 57.788,160.699 128.124,160.699 C198.459,160.699 255.477,152.684 255.477,142.797 C255.477,135.517 224.553,129.251 180.161,126.454"
              fill="#D34A47"
            ></path>
            <path
              d="M173.535,151.669 C173.535,151.669 171.068,152.222 163.811,152.253 C156.552,152.283 151.398,152.206 149.345,150.336 C148.793,149.834 148.491,148.837 148.494,148.162 C148.5,146.877 149.412,146.12 150.574,145.646 L151.673,147.37 C151.195,147.535 150.922,147.73 150.921,147.938 C150.917,148.914 158.343,149.582 164.023,149.51 C169.704,149.44 176.568,148.972 176.574,148.01 C176.574,147.719 176.055,147.445 175.152,147.229 L176.246,145.517 C177.718,145.974 179.003,146.857 179,148.385 C178.986,150.983 175.68,151.378 173.535,151.669"
              fill="#FFFFFF"
            ></path>
            <path
              d="M254.509,15.184 C256.095,13.352 253.688,8.666 249.133,4.719 C244.576,0.774 239.596,-0.94 238.007,0.892 C236.42,2.724 238.828,7.41 243.385,11.355 C247.94,15.301 252.922,17.017 254.509,15.184"
              fill="#D34A47"
            ></path>
            <path
              d="M194.246,327.865 C192.751,313.481 225.708,292.649 217.25,291.982 C199.042,293.023 189.98,313.32 180.819,334.578 C177.462,342.369 165.975,375.591 158.441,371.501 C150.909,367.413 168.206,340.094 173.054,323.87 C167.46,327.972 146.945,343.911 141.658,328.984 C133.158,336.203 114.995,340.114 117.044,321.151 C112.522,329.161 102.373,340.344 90.191,335.697 C74.193,329.596 99.461,278.635 105.744,281.206 C112.028,283.776 104.476,295.385 102.498,299.893 C98.148,309.814 93.123,322.286 96.48,324.839 C102.231,329.213 117.881,308.292 118.229,307.832 C121.156,303.965 129.495,278.666 136.216,281.571 C142.937,284.476 119.452,317.879 128.233,324.508 C130.004,325.846 137.25,323.683 141.658,318.914 C144.51,315.829 143.529,308.996 153.036,286.324 C162.543,263.653 171.016,235.419 177.536,237.57 C184.056,239.72 178.682,254.211 176.343,259.613 C165.367,284.967 146.387,326.854 155.338,323.683 C164.289,320.513 168.95,320.327 177.715,310.07 C186.48,299.813 186.076,282.918 191.918,283.277 C197.762,283.637 196.781,289.054 195.364,293.179 C201.114,286.599 222.62,272.741 227.812,286.466 C233.962,302.715 197.043,326.186 206.248,324.989 C215.223,323.822 229.763,314.613 235.971,306.24 L253.059,152.614 C253.059,152.614 235.864,166.844 126.47,166.844 C17.075,166.844 1.659,152.91 1.659,152.91 L16.207,293.134 C23.929,271.187 42.266,226.795 71.17,228.285 C84.318,228.963 101.87,254.28 86.835,255.138 C80.471,255.5 79.825,242.501 72.289,240.592 C66.851,239.214 59.28,243.635 54.387,248.425 C44.629,257.975 23.642,295.654 26.415,314.439 C29.948,338.388 59.463,306.117 64.457,296.536 C67.974,289.787 70.35,269.791 78.042,271.889 C85.735,273.987 77.371,294.623 71.795,312.868 C65.531,333.355 62.238,354.966 54.387,352.48 C46.535,349.996 59.325,323.548 58.862,318.914 C51.482,325.723 37.886,342.961 20.492,334.429 L29.527,421.507 C29.527,421.507 53.54,440.48 125.877,440.48 C198.214,440.48 223.116,421.803 223.116,421.803 L234.335,320.946 C225.156,329.884 196.106,345.756 194.246,327.865"
              fill="#D34A47"
            ></path>
          </g>
        </svg>
      ),
      key: 10,
    },
  ]

  useEffect(() => {
    myfunction()
  }, [])

  const myfunction = () => {
    const slides = document.querySelectorAll(".img-container .slides")

    slides.forEach(slide => {
      let current = 0
      let z = 1000000000
      const images = slide.querySelectorAll("img")

      images.forEach(image => {
        z = z + 1

        image.style.zIndex = z
      })

      slide.addEventListener("click", function () {
        z = z + 1

        let direction = "150%"
        let midAngle = 15

        if (Math.random() > 0.5) {
          direction = "-150%"
          midAngle = -15
        }

        const currentImage = images[current]
        const flipTimeline = gsap.timeline()

        flipTimeline
          .set(currentImage, { x: 0 })
          .to(currentImage, {
            x: direction,
            rotation: midAngle,
            rotationY: 90,
            scale: 1.1,
          })
          .set(currentImage, { zIndex: z })
          .to(currentImage, {
            x: 0,
            rotation: () => {
              return 16 * Math.random() - 8
            },
            rotationY: 0,
            scale: 1,
          })

        current = current + 1
        current = current % images.length
      })
    })
  }

  return (
    <Layout>
      <section id="about">
        <div className="about-hero">
          {/* <div className="split">
            <div className="slides">
              <img src={me} alt="me" className="slide" />
              <img src={me} alt="me" className="slide" />
              <img src={me} alt="me" className="slide" />
              <img src={me} alt="me" className="slide" />
            </div>
          </div> */}
          <div className="img-container">
            <div className="slides">
              {/* <Controls playState={PlayState.stop}> */}

              <Timeline
                target={
                  <Fragment>
                    <img
                      src={me}
                      className="slide"
                      alt="Leroy Clarke Jr Smiling"
                    />

                    <img
                      src={me3}
                      className="slide"
                      alt="Leroy Clarke Jr in a coat"
                    />
                    <img
                      src={me2}
                      className="slide"
                      alt="Leroy Clarke Jr Serious"
                    />
                  </Fragment>
                }
              >
                <Tween from={{ opacity: 0 }} duration={0.5} />
                <Tween
                  from={{
                    x: () => {
                      return 500 * Math.random() - 250
                    },
                    y: "500%",
                    rotation: () => {
                      return 90 * Math.random() - 45
                    },
                    opacity: 1,
                  }}
                  to={{ x: 0, y: 0 }}
                  duration={0.5}
                  target={0}
                />
                <Tween
                  from={{
                    x: () => {
                      return 500 * Math.random() - 250
                    },
                    y: "500%",
                    rotation: () => {
                      return 90 * Math.random() - 45
                    },
                    opacity: 1,
                  }}
                  to={{ x: 0, y: 0, stagger: -0.25 }}
                  duration={0.5}
                  target={1}
                />
                <Tween
                  from={{
                    x: () => {
                      return 500 * Math.random() - 250
                    },
                    y: "500%",
                    rotation: () => {
                      return 90 * Math.random() - 45
                    },
                    opacity: 1,
                  }}
                  to={{ x: 0, y: 0 }}
                  duration={0.5}
                  target={2}
                />
                <Tween
                  to={{
                    rotation: () => {
                      return 16 * Math.random() - 8
                    },
                  }}
                  target={0}
                  duration={0.5}
                />
                <Tween
                  to={{
                    rotation: () => {
                      return 16 * Math.random() - 8
                    },
                  }}
                  target={1}
                  duration={0.5}
                />
                <Tween
                  to={{
                    rotation: () => {
                      return 16 * Math.random() - 8
                    },
                  }}
                  target={2}
                  duration={0.5}
                />
              </Timeline>

              {/* </Controls> */}
            </div>
          </div>

          <div className="my-identity">
            <div className="content">
              <Reveal>
                <Tween
                  from={{ opacity: 0 }}
                  to={{ opacity: 1 }}
                  duration={0.5}
                  stagger={0.2}
                  delay={0.5}
                >
                  <h1>
                    Former pro gymnast, Penn State Graduate, Creative problem
                    solver.
                  </h1>
                  <p>
                    I'm Leroy - A self taught Front-end Engineer living in New
                    Jersey.
                  </p>
                  <p>
                    I ultimately decided to learn to code because of my love for
                    technology and appreciation for digital multimedia art. I
                    see front-end web development as my opportunity to unleash
                    my creativity while also challenging myself technically.
                  </p>
                  <p>
                    It has become my purpose to use my coding skillset along
                    with my knowledge in Brand Strategy, UI design, SEO & Google
                    Analytics to help others maximize their potential in the
                    digital world.
                  </p>

                  <p>
                    Aside from web development, my interests include fitness,
                    music, personal finance, & entreprenuership.{" "}
                    <span role="img" aria-label="Peace Emoji">
                      ✌🏾
                    </span>
                  </p>
                </Tween>
              </Reveal>
            </div>
          </div>
        </div>
      </section>

      <section id="skills">
        <div className="section-heading">
          <Reveal>
            <Tween from={{ opacity: 0 }} to={{ opacity: 1 }} duration={0.5}>
              <h3>
                My Stack:{" "}
                <span>Coding Tools & Technologies I am competent in</span>
              </h3>
            </Tween>
          </Reveal>
        </div>

        <div className="skills-container">
          <ul>
            <Reveal>
              <Tween
                from={{ opacity: 0 }}
                to={{ opacity: 1 }}
                stagger={0.1}
                duration={0.5}
              >
                {skills.map(skill => {
                  return (
                    <li key={skill.key}>
                      {React.cloneElement(skill.icon, { className: "icon" })}
                      <h6>{skill.name}</h6>
                    </li>
                  )
                })}
              </Tween>
            </Reveal>
          </ul>
        </div>
      </section>
    </Layout>
  )
}

export default About
